version: "3.9"

services:
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:latest
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - db_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.postgres.env
    networks:
      - app-network

  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command:  ["./start.sh"]
    ports:
      - 8000:8000 # server port
      - 8001:8001 # debug port
    volumes:
      - ./src:/src
      - pip_cache:/usr/local/lib/python3/site-packages
    env_file:
      - ./.postgres.env
      - ./.django.env
    networks:
      - app-network
    depends_on:
      - db

  worker:
    # restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command:  ["./worker.sh"]
    volumes:
      - ./src:/src
      - pip_cache:/usr/local/lib/python3/site-packages
    env_file:
      - ./.postgres.env
      - ./.django.env
    networks:
      - app-network
    depends_on:
      - redis

  beat:
    # restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command:  ["./beat.sh"]
    volumes:
      - ./src:/src
      - pip_cache:/usr/local/lib/python3/site-packages
    env_file:
      - ./.postgres.env
      - ./.django.env
    networks:
      - app-network
    depends_on:
      - redis

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    networks:
      - app-network


  # mailhog:
  #   container_name: mailhog
  #   image: mailhog/mailhog
  #   logging:
  #     driver: 'none'  # disable saving logs
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui
  #   networks:
  #     - app-network

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  db_postgres_data:
  pip_cache:
